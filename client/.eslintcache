[{"D:\\mernProjects\\16.project\\client\\src\\index.js":"1","D:\\mernProjects\\16.project\\client\\src\\reportWebVitals.js":"2","D:\\mernProjects\\16.project\\client\\src\\App.js":"3","D:\\mernProjects\\16.project\\client\\src\\components\\Navbar.js":"4","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Signin.js":"5","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Home.js":"6","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Profile.js":"7","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Signup.js":"8","D:\\mernProjects\\16.project\\client\\src\\reducers\\useReducer.js":"9","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\UserProfile.js":"10","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\SubscribedUserPosts.js":"11","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\CreatePost.js":"12","D:\\mernProjects\\16.project\\server\\client\\src\\index.js":"13","D:\\mernProjects\\16.project\\server\\client\\src\\reportWebVitals.js":"14","D:\\mernProjects\\16.project\\server\\client\\src\\App.js":"15","D:\\mernProjects\\16.project\\server\\client\\src\\reducers\\useReducer.js":"16","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Signin.js":"17","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Signup.js":"18","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\UserProfile.js":"19","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Home.js":"20","D:\\mernProjects\\16.project\\server\\client\\src\\components\\Navbar.js":"21","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Profile.js":"22","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\SubscribedUserPosts.js":"23","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\CreatePost.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1822,"mtime":1611467578070,"results":"28","hashOfConfig":"26"},{"size":1586,"mtime":1611746691369,"results":"29","hashOfConfig":"26"},{"size":2201,"mtime":1611751944050,"results":"30","hashOfConfig":"26"},{"size":5479,"mtime":1611749266163,"results":"31","hashOfConfig":"26"},{"size":4023,"mtime":1611745060340,"results":"32","hashOfConfig":"26"},{"size":3239,"mtime":1611751963570,"results":"33","hashOfConfig":"26"},{"size":537,"mtime":1611480391071,"results":"34","hashOfConfig":"26"},{"size":4887,"mtime":1611473336712,"results":"35","hashOfConfig":"26"},{"size":5427,"mtime":1611467283472,"results":"36","hashOfConfig":"26"},{"size":2468,"mtime":1611318685903,"results":"37","hashOfConfig":"26"},{"size":500,"mtime":499162500000,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":1822,"mtime":1611467578070,"results":"41","hashOfConfig":"39"},{"size":537,"mtime":1611480391071,"results":"42","hashOfConfig":"39"},{"size":2201,"mtime":1611751944050,"results":"43","hashOfConfig":"39"},{"size":3239,"mtime":1611751963570,"results":"44","hashOfConfig":"39"},{"size":4887,"mtime":1611473336712,"results":"45","hashOfConfig":"39"},{"size":7725,"mtime":1611830742559,"results":"46","hashOfConfig":"39"},{"size":3562,"mtime":1611811685269,"results":"47","hashOfConfig":"39"},{"size":4023,"mtime":1611745060340,"results":"48","hashOfConfig":"39"},{"size":5427,"mtime":1611467283472,"results":"49","hashOfConfig":"39"},{"size":2468,"mtime":1611318685903,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1v41pzo",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1d4vk7o",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"84"},"D:\\mernProjects\\16.project\\client\\src\\index.js",[],["109","110"],"D:\\mernProjects\\16.project\\client\\src\\reportWebVitals.js",[],"D:\\mernProjects\\16.project\\client\\src\\App.js",["111","112"],"import React, { createContext, useContext, useEffect, useReducer } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/Signin\";\nimport Signup from \"./components/screens/Signup\";\nimport Profile from \"./components/screens/Profile\";\nimport UserProfile from \"./components/screens/UserProfile\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport SubscribedUserPosts from \"./components/screens/SubscribedUserPosts\";\nimport {reducer,initialState} from './reducers/useReducer'\n\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const {state,dispatch}=useContext(UserContext)\n  const history =useHistory()\n  useEffect(()=>{\n    const user=JSON.parse(localStorage.getItem(\"user\"))\n    \n    if(user){\n      dispatch({type:\"USER\",payload:user})\n      \n    }else{\n      history.push('/signin')\n    }\n\n  },[])\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/create\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile/>\n      </Route>\n      <Route path=\"/myfollowingpost\">\n        <SubscribedUserPosts/>\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state,dispatch]=useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n\n    <BrowserRouter>\n      <Navbar />\n      <Routing/>\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\mernProjects\\16.project\\client\\src\\components\\Navbar.js",[],"D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Signin.js",["113"],"D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Home.js",["114"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { delete } from \"../../../../server/routes/auth\";\r\nimport { UserContext } from \"../../App\";\r\n// import UserProfile from \"./UserProfile\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    fetch(\"/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        //   console.log(result)\r\n        const newData = data.map((item) => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        //   console.log(result)\r\n        const newData = data.map((item) => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData=data.filter(item=>{\r\n            return item._id !==result._id\r\n        })\r\n        setData(newData)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((item) => {\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5>\r\n              <Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile/\"}>{item.postedBy.name} </Link>\r\n              \r\n              {item.postedBy._id === state._id && (\r\n                <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                onClick={()=>deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n                favorite\r\n              </i>\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_down\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_up\r\n                </i>\r\n              )}\r\n\r\n              <h6>{item.likes.length} likes </h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map((record) => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}{\" \"}\r\n                    </span>\r\n                    {record.text}{\" \"}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                }}\r\n              >\r\n                \r\n                <input type=\"text\" placeholder=\"add a comment\" />\r\n                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Profile.js",["115"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App'\r\n\r\nconst Profile=()=>{\r\n    const [mypics, setMypics] = useState([])\r\n    const {state,dispatch}=useContext(UserContext)\r\n    const [image, setImage] = useState(\"\")\r\n    // const [url, setUrl] = useState(\"\")\r\n    useEffect(()=>{\r\n        fetch(\"/mypost\",{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setMypics(result.mypost)\r\n        })\r\n\r\n    },[])\r\n    useEffect(()=>{\r\n        if(image){\r\n            const data=new FormData()\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"socialmedia\")\r\n            data.append(\"cloud_name\",\"surajjha1234cloud\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/surajjha1234cloud/image/upload\",{\r\n              method:\"post\",\r\n              body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n            //   setUrl(data.url)\r\n            //   localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\r\n            //   dispatch({type:\"UPDATEPIC\",payload:data.url})\r\n              fetch(\"/updatepic\",{\r\n                  method:\"put\",\r\n                  headers:{\r\n                      \"Content-Type\":\"application/json\",\r\n                      \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                  },\r\n                  body:JSON.stringify({\r\n                      pic:data.url\r\n                  })\r\n              }).then(res=>res.json())\r\n              .then(result=>{\r\n                  console.log(result)\r\n                  localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.pic}))\r\n                  dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n              })\r\n\r\n            })\r\n            .catch(err=>{\r\n              console.log(err)\r\n            })\r\n        }\r\n\r\n    },[image])\r\n    const updatePhoto=(file)=>{\r\n        setImage(file)\r\n        \r\n    }\r\n    return (\r\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}} >\r\n            <div style={{ margin:\"18px 0px\",borderBottom:\"1px solid grey\"}}>\r\n            \r\n                  </div>\r\n                 \r\n            <div className=\"mob-view\" style={{display:\"flex\",justifyContent:\"space-around\"}}>\r\n                <div>\r\n                    <img alt=\"\" style={{width:\"160px\",height:\"160px\" ,borderRadius:\"80px\"}}\r\n                    src={state?state.pic:\"loading\"}\r\n                    />\r\n                    \r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"Loading\"}</h4>\r\n                    <h4>{state?state.email:\"Loading\"}</h4>\r\n                    <div className=\"mob-view-info\" style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}} >\r\n                        <h5>{mypics.length} posts</h5>\r\n                        <h5>{state?state.followers.length:\"0\"} followers</h5>\r\n                        <h5>{state?state.following.length:\"0\"} following</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        <div className=\"file-field input-field\"\r\n        style={{margin:\"10px\"}}\r\n        >\r\n        <div className=\"btn #880e4f pink darken-4\">\r\n          <span>Update Pic</span>\r\n          <input type=\"file\"\r\n          onChange={(e)=>updatePhoto(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypics.map(item=>{\r\n                        return(\r\n                            <img key={item._id}  className=\"item\" alt={item.title} src={item.photo} />\r\n                        )\r\n                    })\r\n                }\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\Signup.js",["116"],"D:\\mernProjects\\16.project\\client\\src\\reducers\\useReducer.js",[],"D:\\mernProjects\\16.project\\client\\src\\components\\screens\\UserProfile.js",["117"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst UserProfile = () => {\r\n  const [userProfile, setProfile] = useState(null);\r\n  \r\n  const { state, dispatch } = useContext(UserContext);\r\n  const { userid } = useParams();\r\n  const [showfollow, setShowfollow] = useState(state?!state.following.includes(userid):true);\r\n  useEffect(() => {\r\n    fetch(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n\r\n        setProfile(result);\r\n      });\r\n  }, []);\r\n\r\n  const followUser = () => {\r\n    fetch(\"/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: [...prevState.user.followers, data._id],\r\n            },\r\n          };\r\n        })\r\n        setShowfollow(false)\r\n      });\r\n  };\r\n  const unfollowUser = () => {\r\n    fetch(\"/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        unfollowId: userid,\r\n      }),\r\n    }).then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        \r\n        setProfile((prevState) => {\r\n            const newFollower =prevState.user.followers.filter(item=>item !==data._id)\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers:newFollower,\r\n            },\r\n          };\r\n        })\r\n        setShowfollow(true)\r\n        \r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userProfile ? (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"160px\",\r\n                  height: \"160px\",\r\n                  borderRadius: \"80px\",\r\n                }}\r\n                src={userProfile.user.pic}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{userProfile.user.name}</h4>\r\n              <h5>{userProfile.user.email}</h5>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"108%\",\r\n                }}\r\n              >\r\n                <h5>{userProfile.posts.length} posts </h5>\r\n                <h5>{userProfile.user.followers.length} followers</h5>\r\n                <h5>{userProfile.user.following.length} following</h5>\r\n              </div>\r\n              {showfollow ? (\r\n                <button\r\n                 style={{margin:\"10px\",borderRadius:\"20px\",}}\r\n                  className=\"btn waves-effect waves-light #880e4f pink darken-4\"\r\n                  onClick={() => followUser()}\r\n                >\r\n                  Follow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                style={{margin:\"10px\",borderRadius:\"20px\"}}\r\n                  className=\"btn waves-effect waves-light #880e4f pink darken-4\"\r\n                  onClick={() => unfollowUser()}\r\n                >\r\n                  UnFollow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"gallery\">\r\n            {userProfile.posts.map((item) => {\r\n              return (\r\n                <img\r\n                  key={item._id}\r\n                  className=\"item\"\r\n                  alt={item.title}\r\n                  src={item.photo}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading...</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\SubscribedUserPosts.js",["118","119","120","121"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { delete } from \"../../../../server/routes/auth\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst SubscribedUserPosts = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    fetch(\"/getsubpost\", {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        //   console.log(result)\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        //   console.log(result)\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData=data.filter(item=>{\r\n            return item._id !==result._id\r\n        })\r\n        setData(newData)\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((item) => {\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5>\r\n              <Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile/\"}>{item.postedBy.name}</Link>\r\n              \r\n              {item.postedBy._id === state._id && (\r\n                <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                onClick={()=>deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n                favorite\r\n              </i>\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_down\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_up\r\n                </i>\r\n              )}\r\n\r\n              <h6>{item.likes.length} likes </h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map((record) => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}{\" \"}\r\n                    </span>\r\n                    {record.text}{\" \"}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                }}\r\n              >\r\n                <input type=\"text\" placeholder=\"add a comment\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscribedUserPosts;\r\n","D:\\mernProjects\\16.project\\client\\src\\components\\screens\\CreatePost.js",["122"],"import React, { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CreatePost = () => {\r\n  const history =useHistory()\r\n  const [title, setTitle] = useState(\"\")\r\n  const [body, setBody] = useState(\"\")\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  useEffect(()=>{\r\n    if(url){\r\n\r\n    \r\n    fetch(\"/createpost\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\",\r\n        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n\r\n      },\r\n      body:JSON.stringify({\r\n        title,\r\n        body,\r\n        pic:url\r\n\r\n      })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      \r\n      if(data.error){\r\n        M.toast({html:data.error,classes:\"#d50000 red accent-4\"})\r\n\r\n      }\r\n      else{\r\n        M.toast({html:\"created post successfully\",classes:\"#1b5e20 green darken-4\"})\r\n        history.push('/')\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  },[url])\r\n\r\n  const postDetails=()=>{\r\n    \r\n    const data=new FormData()\r\n    data.append(\"file\",image)\r\n    data.append(\"upload_preset\",\"socialmedia\")\r\n    data.append(\"cloud_name\",\"surajjha1234cloud\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/surajjha1234cloud/image/upload\",{\r\n      method:\"post\",\r\n      body:data\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      setUrl(data.url)\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n  return (\r\n    <div className=\"card input-field\"\r\n    style={{margin:\"30px auto\",maxWidth:\"500px\",padding:\"20px\",textAlign:\"center\"}}\r\n    >\r\n      <input type=\"text\" placeholder=\"title\" \r\n      value={title}\r\n      onChange={(e)=>setTitle(e.target.value)}\r\n      />\r\n      <input type=\"text\" placeholder=\"body\" \r\n      value={body}\r\n       onChange={(e)=>setBody(e.target.value)}\r\n      />\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn #880e4f pink darken-4\">\r\n          <span>Upload Image</span>\r\n          <input type=\"file\"\r\n          onChange={(e)=>setImage(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button className=\"btn waves-effect waves-light #880e4f pink darken-4\"\r\n      onClick={()=>postDetails()}\r\n      >Submitpost</button>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePost;\r\n","D:\\mernProjects\\16.project\\server\\client\\src\\index.js",[],["123","124"],"D:\\mernProjects\\16.project\\server\\client\\src\\reportWebVitals.js",[],"D:\\mernProjects\\16.project\\server\\client\\src\\App.js",["125","126"],"D:\\mernProjects\\16.project\\server\\client\\src\\reducers\\useReducer.js",[],"D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Signin.js",["127"],"import React, { useContext, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport M from 'materialize-css'\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst Signin = () => {\r\n  const {state,dispatch}=useContext(UserContext)\r\n  const history =useHistory()\r\n  \r\n  const [password, setPassword] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const PostData=()=>{\r\n    if(!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n      M.toast({html:\"Invalid email\",classes:\"#d50000 red accent-4\"})\r\n      return\r\n    }\r\n    fetch(\"/signin\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n\r\n      },\r\n      body:JSON.stringify({\r\n        \r\n        password,\r\n        email\r\n\r\n      })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      console.log(data)\r\n      if(data.error){\r\n        M.toast({html:data.error,classes:\"#d50000 red accent-4\"})\r\n\r\n      }\r\n      else{\r\n        localStorage.setItem(\"jwt\",data.token)\r\n        localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n        dispatch({type:\"USER\",payload:data.user})\r\n        M.toast({html:\"signed in successfully\",classes:\"#1b5e20 green darken-4\"})\r\n        history.push('/')\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"my-card\" >\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Social Media</h2>\r\n        <input type=\"text\" placeholder=\"email\" \r\n        value={email}\r\n        onChange={(e)=>setEmail(e.target.value)}\r\n        />\r\n        <input type=\"password\" placeholder=\"password\"\r\n        value={password}\r\n        onChange={(e)=>setPassword(e.target.value)}\r\n        />\r\n        <button className=\"btn waves-effect waves-light #880e4f pink darken-4\"\r\n        onClick={()=>PostData()}\r\n        >Signin</button>\r\n        <h5 >\r\n        Don't have have an account ?\r\n            <Link to=\"/signup\" >\r\n             <span style={{color:\"blue\"}} > Click here</span>\r\n            </Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Signup.js",["128"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () => {\r\n  const history =useHistory()\r\n  const [name, setName] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(undefined)\r\n\r\n  useEffect(()=>{\r\n    if(url){\r\n      uploadFields()\r\n    }\r\n  },[url])\r\n  const uploadPic =()=>{\r\n    const data=new FormData()\r\n    data.append(\"file\",image)\r\n    data.append(\"upload_preset\",\"socialmedia\")\r\n    data.append(\"cloud_name\",\"surajjha1234cloud\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/surajjha1234cloud/image/upload\",{\r\n      method:\"post\",\r\n      body:data\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n      setUrl(data.url)\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const uploadFields=()=>{\r\n    if(!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n      M.toast({html:\"Invalid email\",classes:\"#d50000 red accent-4\"})\r\n      return\r\n    }\r\n    fetch(\"/signup\",{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n\r\n      },\r\n      body:JSON.stringify({\r\n        name,\r\n        password,\r\n        email,\r\n        pic:url\r\n\r\n      })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n      if(data.error){\r\n        M.toast({html:data.error,classes:\"#d50000 red accent-4\"})\r\n\r\n      }\r\n      else{\r\n        M.toast({html:data.message,classes:\"#1b5e20 green darken-4\"})\r\n        history.push('/signin')\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n  const PostData=()=>{\r\n    if(image){\r\n      uploadPic()\r\n    }else{\r\n      uploadFields()\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <div className=\"my-card\" >\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Social Media</h2>\r\n        <input \r\n        type=\"text\" \r\n        placeholder=\"name\"\r\n        value={name}\r\n        onChange={(e)=>setName(e.target.value)}\r\n        />\r\n        <input type=\"text\" placeholder=\"email\" \r\n        value={email}\r\n        onChange={(e)=>setEmail(e.target.value)}\r\n        />\r\n        <input type=\"password\" placeholder=\"password\"\r\n        value={password}\r\n        onChange={(e)=>setPassword(e.target.value)}\r\n        />\r\n          <div className=\"file-field input-field\">\r\n        <div className=\"btn #880e4f pink darken-4\">\r\n          <span>Upload Pic</span>\r\n          <input type=\"file\"\r\n          onChange={(e)=>setImage(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n        <button className=\"btn waves-effect waves-light #880e4f pink darken-4\"\r\n        onClick={()=>PostData()}\r\n        >Signup</button>\r\n        <h5 >\r\n        Already have an account?\r\n            <Link to=\"/signin\" >\r\n            <span style={{color:\"blue\"}} >Click here</span> \r\n            </Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\UserProfile.js",["129"],"D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Home.js",["130"],"D:\\mernProjects\\16.project\\server\\client\\src\\components\\Navbar.js",[],"D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\Profile.js",["131"],"D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\SubscribedUserPosts.js",["132","133","134","135"],"D:\\mernProjects\\16.project\\server\\client\\src\\components\\screens\\CreatePost.js",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":18,"column":10,"nodeType":"143","messageId":"144","endLine":18,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":30,"column":5,"nodeType":"147","endLine":30,"endColumn":7,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"142","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"141","severity":1,"message":"149","line":9,"column":18,"nodeType":"143","messageId":"144","endLine":9,"endColumn":26},{"ruleId":"145","severity":1,"message":"150","line":57,"column":7,"nodeType":"147","endLine":57,"endColumn":14,"suggestions":"151"},{"ruleId":"145","severity":1,"message":"152","line":17,"column":5,"nodeType":"147","endLine":17,"endColumn":10,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"154","line":23,"column":6,"nodeType":"147","endLine":23,"endColumn":8,"suggestions":"155"},{"ruleId":"141","severity":1,"message":"149","line":8,"column":18,"nodeType":"143","messageId":"144","endLine":8,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":36,"column":24,"nodeType":"158","messageId":"159","endLine":36,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":63,"column":24,"nodeType":"158","messageId":"159","endLine":63,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":92,"column":24,"nodeType":"158","messageId":"159","endLine":92,"endColumn":26},{"ruleId":"145","severity":1,"message":"160","line":44,"column":5,"nodeType":"147","endLine":44,"endColumn":10,"suggestions":"161"},{"ruleId":"137","replacedBy":"162"},{"ruleId":"139","replacedBy":"163"},{"ruleId":"141","severity":1,"message":"142","line":18,"column":10,"nodeType":"143","messageId":"144","endLine":18,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":30,"column":5,"nodeType":"147","endLine":30,"endColumn":7,"suggestions":"164"},{"ruleId":"141","severity":1,"message":"142","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"145","severity":1,"message":"152","line":17,"column":5,"nodeType":"147","endLine":17,"endColumn":10,"suggestions":"165"},{"ruleId":"145","severity":1,"message":"154","line":23,"column":6,"nodeType":"147","endLine":23,"endColumn":8,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"149","line":11,"column":18,"nodeType":"143","messageId":"144","endLine":11,"endColumn":26},{"ruleId":"145","severity":1,"message":"150","line":57,"column":7,"nodeType":"147","endLine":57,"endColumn":14,"suggestions":"167"},{"ruleId":"141","severity":1,"message":"149","line":8,"column":18,"nodeType":"143","messageId":"144","endLine":8,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":36,"column":24,"nodeType":"158","messageId":"159","endLine":36,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":63,"column":24,"nodeType":"158","messageId":"159","endLine":63,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":92,"column":24,"nodeType":"158","messageId":"159","endLine":92,"endColumn":26},{"ruleId":"145","severity":1,"message":"160","line":44,"column":5,"nodeType":"147","endLine":44,"endColumn":10,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["171"],"'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["174"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["175"],["169"],["170"],["176"],["177"],["178"],["179"],["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"181","fix":"191"},{"desc":"185","fix":"192"},{"desc":"187","fix":"193"},{"desc":"183","fix":"194"},{"desc":"189","fix":"195"},"Update the dependencies array to be: [dispatch, history]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"198","text":"199"},"Update the dependencies array to be: [uploadFields, url]",{"range":"200","text":"201"},"Update the dependencies array to be: [userid]",{"range":"202","text":"203"},"Update the dependencies array to be: [body, history, title, url]",{"range":"204","text":"205"},{"range":"206","text":"197"},{"range":"207","text":"201"},{"range":"208","text":"203"},{"range":"209","text":"199"},{"range":"210","text":"205"},[1016,1018],"[dispatch, history]",[1981,1988],"[dispatch, image, state]",[482,487],"[uploadFields, url]",[720,722],"[userid]",[1026,1031],"[body, history, title, url]",[1016,1018],[482,487],[720,722],[1981,1988],[1026,1031]]